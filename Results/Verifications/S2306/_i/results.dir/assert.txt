                                                                                                                      confidence improvement accuracy (*)    (**)    (***)
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=0 strict=0 len=100 n=20000                                                 -0.72 %       ±3.70%  ±8.54%  ±27.20%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=0 strict=0 len=1000 n=20000                                          *      4.35 %       ±3.96%  ±9.14%  ±29.10%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=0 strict=1 len=100 n=20000                                          **      1.35 %       ±0.30%  ±0.69%   ±2.18%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=0 strict=1 len=1000 n=20000                                                 1.29 %       ±3.80%  ±8.76%  ±27.89%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=1 strict=0 len=100 n=20000                                                  0.83 %       ±2.98%  ±6.87%  ±21.88%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=1 strict=0 len=1000 n=20000                                                -0.10 %       ±1.33%  ±3.06%   ±9.75%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=1 strict=1 len=100 n=20000                                                 -0.71 %       ±2.22%  ±5.12%  ±16.31%
assert/deepequal-buffer.js method="deepEqual" arrayBuffer=1 strict=1 len=1000 n=20000                                                 0.46 %       ±1.09%  ±2.52%   ±8.03%
assert/deepequal-buffer.js method="notDeepEqual" arrayBuffer=0 strict=1 len=100 n=20000                                              -2.41 %       ±2.53%  ±5.85%  ±18.62%
assert/deepequal-buffer.js method="notDeepEqual" arrayBuffer=0 strict=1 len=1000 n=20000                                             -1.54 %       ±3.00%  ±6.92%  ±22.02%
assert/deepequal-buffer.js method="notDeepEqual" arrayBuffer=1 strict=1 len=100 n=20000                                        *     -0.87 %       ±0.71%  ±1.63%   ±5.21%
assert/deepequal-buffer.js method="notDeepEqual" arrayBuffer=1 strict=1 len=1000 n=20000                                             -0.44 %       ±1.04%  ±2.40%   ±7.65%
assert/deepequal-buffer.js method="unequal_length" arrayBuffer=0 strict=1 len=100 n=20000                                            -1.48 %       ±3.54%  ±8.16%  ±25.98%
assert/deepequal-buffer.js method="unequal_length" arrayBuffer=0 strict=1 len=1000 n=20000                                           -0.47 %       ±2.44%  ±5.64%  ±17.96%
assert/deepequal-buffer.js method="unequal_length" arrayBuffer=1 strict=1 len=100 n=20000                                             2.62 %       ±5.76% ±13.29%  ±42.31%
assert/deepequal-buffer.js method="unequal_length" arrayBuffer=1 strict=1 len=1000 n=20000                                            0.40 %       ±4.48% ±10.34%  ±32.92%
assert/deepequal-map.js method="deepEqual_mixed" strict=0 len=500 n=500                                                              -0.29 %       ±4.15%  ±9.57%  ±30.48%
assert/deepequal-map.js method="deepEqual_mixed" strict=1 len=500 n=500                                                              -0.97 %       ±3.54%  ±8.16%  ±25.98%
assert/deepequal-map.js method="deepEqual_objectOnly" strict=0 len=500 n=500                                                          0.51 %       ±2.11%  ±4.88%  ±15.52%
assert/deepequal-map.js method="deepEqual_objectOnly" strict=1 len=500 n=500                                                          3.10 %       ±3.77%  ±8.69%  ±27.68%
assert/deepequal-map.js method="deepEqual_primitiveOnly" strict=0 len=500 n=500                                                *      5.00 %       ±4.35% ±10.03%  ±31.93%
assert/deepequal-map.js method="deepEqual_primitiveOnly" strict=1 len=500 n=500                                                *      5.11 %       ±2.83%  ±6.52%  ±20.75%
assert/deepequal-map.js method="notDeepEqual_mixed" strict=0 len=500 n=500                                                            1.49 %       ±4.09%  ±9.44%  ±30.06%
assert/deepequal-map.js method="notDeepEqual_mixed" strict=1 len=500 n=500                                                           -0.10 %       ±3.34%  ±7.70%  ±24.52%
assert/deepequal-map.js method="notDeepEqual_objectOnly" strict=0 len=500 n=500                                                      -2.03 %       ±5.27% ±12.16%  ±38.73%
assert/deepequal-map.js method="notDeepEqual_objectOnly" strict=1 len=500 n=500                                                      -2.05 %       ±5.44% ±12.56%  ±39.98%
assert/deepequal-map.js method="notDeepEqual_primitiveOnly" strict=0 len=500 n=500                                            **      4.41 %       ±1.06%  ±2.45%   ±7.81%
assert/deepequal-map.js method="notDeepEqual_primitiveOnly" strict=1 len=500 n=500                                                   -0.26 %       ±6.41% ±14.79%  ±47.09%
assert/deepequal-object.js method="deepEqual" strict=1 size=100 n=2000                                                                0.42 %       ±3.17%  ±7.31%  ±23.28%
assert/deepequal-object.js method="deepEqual" strict=1 size=1000 n=200                                                               -0.90 %       ±3.10%  ±7.15%  ±22.76%
assert/deepequal-object.js method="deepEqual" strict=1 size=10000 n=25                                                         *     -3.81 %       ±3.11%  ±7.18%  ±22.86%
assert/deepequal-object.js method="notDeepEqual" strict=1 size=100 n=2000                                                      *     -1.65 %       ±1.19%  ±2.75%   ±8.76%
assert/deepequal-object.js method="notDeepEqual" strict=1 size=1000 n=200                                                             3.75 %       ±4.45% ±10.27%  ±32.70%
assert/deepequal-object.js method="notDeepEqual" strict=1 size=10000 n=25                                                      *      8.74 %       ±7.98% ±18.40%  ±58.58%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="array"                             *     -0.94 %       ±0.47%  ±1.09%   ±3.46%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="boolean"                                  1.62 %       ±1.95%  ±4.49%  ±14.29%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="circular"                                -2.19 %       ±5.68% ±13.10%  ±41.71%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="date"                             **     17.12 %       ±2.78%  ±6.42%  ±20.45%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="empty_object"                             0.52 %       ±8.40% ±19.37%  ±61.67%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="number"                                  -1.85 %       ±1.96%  ±4.51%  ±14.37%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="object_other_property"             *     -2.58 %       ±2.45%  ±5.64%  ±17.96%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="object"                                   0.02 %       ±9.04% ±20.84%  ±66.36%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="regexp"                            *     -1.54 %       ±0.85%  ±1.95%   ±6.22%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="set_object"                               1.19 %       ±6.13% ±14.15%  ±45.05%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="set_simple"                               0.71 %       ±3.04%  ±7.02%  ±22.35%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=0 n=100000 primitive="string"                                  -4.64 %      ±25.91% ±59.77% ±190.30%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="array"                             *      2.86 %       ±1.46%  ±3.37%  ±10.73%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="boolean"                                  0.56 %       ±3.66%  ±8.44%  ±26.87%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="circular"                                -1.49 %       ±3.04%  ±7.01%  ±22.33%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="date"                                     1.29 %       ±4.06%  ±9.36%  ±29.79%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="empty_object"                            -1.31 %       ±7.56% ±17.43%  ±55.51%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="number"                                  -1.47 %       ±4.87% ±11.22%  ±35.74%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="object_other_property"                   -1.53 %       ±2.84%  ±6.55%  ±20.84%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="object"                                  -0.64 %       ±1.12%  ±2.58%   ±8.23%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="regexp"                                  -1.46 %       ±1.56%  ±3.60%  ±11.46%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="set_object"                               0.90 %       ±1.61%  ±3.72%  ±11.86%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="set_simple"                        *     -2.17 %       ±2.13%  ±4.90%  ±15.61%
assert/deepequal-prims-and-objs-big-loop.js method="deepEqual" strict=1 n=100000 primitive="string"                            *     -2.37 %       ±1.22%  ±2.82%   ±8.99%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="array"                                -0.24 %       ±1.74%  ±4.01%  ±12.77%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="boolean"                              -1.72 %       ±3.14%  ±7.23%  ±23.03%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="circular"                       *     -1.82 %       ±1.04%  ±2.40%   ±7.63%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="date"                                  0.45 %       ±2.05%  ±4.72%  ±15.03%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="empty_object"                   *     -3.41 %       ±2.57%  ±5.94%  ±18.90%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="number"                               -2.07 %      ±10.40% ±24.00%  ±76.40%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="object_other_property"                -1.96 %       ±2.13%  ±4.91%  ±15.65%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="object"                               -2.57 %       ±4.53% ±10.45%  ±33.28%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="regexp"                               -1.50 %       ±6.49% ±14.98%  ±47.69%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="set_object"                           -0.02 %       ±3.50%  ±8.08%  ±25.73%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="set_simple"                           -0.83 %       ±5.21% ±12.02%  ±38.27%
assert/deepequal-prims-and-objs-big-loop.js method="notDeepEqual" strict=1 n=100000 primitive="string"                               -2.93 %       ±3.51%  ±8.10%  ±25.78%
assert/deepequal-set.js method="deepEqual_mixed" strict=0 len=500 n=500                                                        *     -2.69 %       ±1.82%  ±4.20%  ±13.38%
assert/deepequal-set.js method="deepEqual_mixed" strict=1 len=500 n=500                                                               0.02 %       ±1.45%  ±3.34%  ±10.63%
assert/deepequal-set.js method="deepEqual_objectOnly" strict=0 len=500 n=500                                                   *     -4.65 %       ±4.60% ±10.61%  ±33.79%
assert/deepequal-set.js method="deepEqual_objectOnly" strict=1 len=500 n=500                                                          0.78 %       ±5.30% ±12.23%  ±38.95%
assert/deepequal-set.js method="deepEqual_primitiveOnly" strict=0 len=500 n=500                                                      -0.24 %       ±2.85%  ±6.57%  ±20.91%
assert/deepequal-set.js method="deepEqual_primitiveOnly" strict=1 len=500 n=500                                                      -1.90 %       ±3.75%  ±8.66%  ±27.58%
assert/deepequal-set.js method="notDeepEqual_mixed" strict=0 len=500 n=500                                                           -4.20 %      ±20.97% ±48.37% ±154.00%
assert/deepequal-set.js method="notDeepEqual_mixed" strict=1 len=500 n=500                                                     *     -1.34 %       ±1.32%  ±3.04%   ±9.68%
assert/deepequal-set.js method="notDeepEqual_objectOnly" strict=0 len=500 n=500                                                      -0.48 %       ±4.57% ±10.53%  ±33.53%
assert/deepequal-set.js method="notDeepEqual_objectOnly" strict=1 len=500 n=500                                                *      2.26 %       ±1.81%  ±4.18%  ±13.31%
assert/deepequal-set.js method="notDeepEqual_primitiveOnly" strict=0 len=500 n=500                                                   -0.51 %       ±4.49% ±10.35%  ±32.94%
assert/deepequal-set.js method="notDeepEqual_primitiveOnly" strict=1 len=500 n=500                                           ***      0.97 %       ±0.12%  ±0.27%   ±0.87%
assert/deepequal-simple-array-and-set.js method="deepEqual_Array" strict=1 len=10000 n=500                                           -0.97 %       ±4.84% ±11.17%  ±35.56%
assert/deepequal-simple-array-and-set.js method="deepEqual_Set" strict=1 len=10000 n=500                                             -0.89 %       ±7.50% ±17.31%  ±55.11%
assert/deepequal-simple-array-and-set.js method="notDeepEqual_Array" strict=1 len=10000 n=500                                 **      3.52 %       ±1.11%  ±2.56%   ±8.15%
assert/deepequal-simple-array-and-set.js method="notDeepEqual_Set" strict=1 len=10000 n=500                                           1.24 %       ±2.67%  ±6.16%  ±19.60%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=0 n=500 type="Float32Array"                                         0.88 %       ±2.41%  ±5.55%  ±17.68%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=0 n=500 type="Int8Array"                                            1.17 %       ±3.22%  ±7.44%  ±23.68%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=0 n=500 type="Uint32Array"                                         -2.50 %      ±14.35% ±33.10% ±105.37%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=0 n=500 type="Uint8Array"                                           1.02 %       ±2.87%  ±6.62%  ±21.09%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=1 n=500 type="Float32Array"                                  *     -1.87 %       ±1.28%  ±2.95%   ±9.40%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=1 n=500 type="Int8Array"                                            0.84 %       ±2.49%  ±5.74%  ±18.27%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=1 n=500 type="Uint32Array"                                         -0.37 %       ±4.52% ±10.42%  ±33.17%
assert/deepequal-typedarrays.js len=100 method="deepEqual" strict=1 n=500 type="Uint8Array"                                           0.80 %       ±5.29% ±12.19%  ±38.82%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=0 n=500 type="Float32Array"                               *      6.91 %       ±6.82% ±15.74%  ±50.11%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=0 n=500 type="Int8Array"                                  *     -2.90 %       ±2.24%  ±5.17%  ±16.45%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=0 n=500 type="Uint32Array"                                       1.08 %       ±2.90%  ±6.69%  ±21.31%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=0 n=500 type="Uint8Array"                                        1.74 %       ±4.10%  ±9.45%  ±30.08%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=1 n=500 type="Float32Array"                                     -0.42 %       ±1.45%  ±3.35%  ±10.68%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=1 n=500 type="Int8Array"                                        -1.21 %       ±4.86% ±11.20%  ±35.66%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=1 n=500 type="Uint32Array"                                *     -3.80 %       ±2.87%  ±6.63%  ±21.10%
assert/deepequal-typedarrays.js len=100 method="notDeepEqual" strict=1 n=500 type="Uint8Array"                                 *      2.81 %       ±1.76%  ±4.05%  ±12.89%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=0 n=500 type="Float32Array"                                        0.21 %       ±0.61%  ±1.42%   ±4.51%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=0 n=500 type="Int8Array"                                          -0.78 %       ±1.80%  ±4.14%  ±13.19%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=0 n=500 type="Uint32Array"                                         0.49 %       ±8.98% ±20.71%  ±65.92%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=0 n=500 type="Uint8Array"                                          0.29 %       ±2.60%  ±5.99%  ±19.08%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=1 n=500 type="Float32Array"                                        0.91 %       ±3.00%  ±6.93%  ±22.06%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=1 n=500 type="Int8Array"                                           2.17 %       ±3.58%  ±8.26%  ±26.30%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=1 n=500 type="Uint32Array"                                        -0.15 %       ±0.18%  ±0.41%   ±1.30%
assert/deepequal-typedarrays.js len=5000 method="deepEqual" strict=1 n=500 type="Uint8Array"                                         -1.17 %       ±5.69% ±13.13%  ±41.79%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=0 n=500 type="Float32Array"                                    -0.04 %       ±3.43%  ±7.92%  ±25.21%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=0 n=500 type="Int8Array"                                       -5.00 %       ±7.88% ±18.17%  ±57.84%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=0 n=500 type="Uint32Array"                                      2.31 %       ±2.87%  ±6.61%  ±21.05%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=0 n=500 type="Uint8Array"                                      -1.27 %       ±3.14%  ±7.24%  ±23.06%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=1 n=500 type="Float32Array"                                     0.86 %       ±4.29%  ±9.90%  ±31.51%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=1 n=500 type="Int8Array"                                 *     -1.30 %       ±0.66%  ±1.52%   ±4.84%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=1 n=500 type="Uint32Array"                                     -1.00 %       ±3.18%  ±7.33%  ±23.32%
assert/deepequal-typedarrays.js len=5000 method="notDeepEqual" strict=1 n=500 type="Uint8Array"                                       0.61 %       ±2.85%  ±6.57%  ±20.91%

Be aware that when doing many comparisons the risk of a false-positive
result increases. In this case, there are 118 comparisons, you can thus
expect the following amount of false-positive results:
  5.90 false positives, when considering a   5% risk acceptance (*, **, ***),
  1.18 false positives, when considering a   1% risk acceptance (**, ***),
  0.12 false positives, when considering a 0.1% risk acceptance (***)
