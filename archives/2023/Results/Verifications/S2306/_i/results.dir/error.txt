                                                                                                       confidence improvement accuracy (*)    (**)   (***)
error/determine-specific-type.js v="() => -0" n=1000000                                                       ***    -11.05 %       ±1.03%  ±2.37%  ±7.53%
error/determine-specific-type.js v="() => ({ __proto__: null })" n=1000000                                            -1.42 %       ±1.62%  ±3.74% ±11.90%
error/determine-specific-type.js v="() => \\"'\\' n=1000000                                                            2.64 %       ±5.10% ±11.77% ±37.47%
error/determine-specific-type.js v="() => \\"\\' n=1000000                                                     **     -2.64 %       ±0.95%  ±2.19%  ±6.98%
error/determine-specific-type.js v="() => +0" n=1000000                                                        **    -12.96 %       ±2.48%  ±5.72% ±18.20%
error/determine-specific-type.js v="() => 1n" n=1000000                                                               -1.77 %      ±10.18% ±23.47% ±74.74%
error/determine-specific-type.js v="() => 2" n=1000000                                                                 0.33 %       ±6.72% ±15.51% ±49.37%
error/determine-specific-type.js v="() => false" n=1000000                                                    ***    -11.16 %       ±0.20%  ±0.46%  ±1.48%
error/determine-specific-type.js v="() => function foo() {}" n=1000000                                                -5.21 %      ±12.26% ±28.29% ±90.06%
error/determine-specific-type.js v="() => Infinity" n=1000000                                                 ***     25.61 %       ±2.08%  ±4.80% ±15.28%
error/determine-specific-type.js v="() => NaN" n=1000000                                                      ***     13.16 %       ±1.38%  ±3.19% ±10.16%
error/determine-specific-type.js v="() => new Array()" n=1000000                                                      -0.41 %       ±2.44%  ±5.62% ±17.89%
error/determine-specific-type.js v="() => new BigInt64Array()" n=1000000                                       **     -2.17 %       ±0.78%  ±1.80%  ±5.73%
error/determine-specific-type.js v="() => new BigUint64Array()" n=1000000                                             -5.76 %      ±11.10% ±25.60% ±81.51%
error/determine-specific-type.js v="() => new Date()" n=1000000                                                       -1.94 %       ±3.96%  ±9.14% ±29.09%
error/determine-specific-type.js v="() => new Float32Array()" n=1000000                                         *     -2.02 %       ±1.82%  ±4.19% ±13.34%
error/determine-specific-type.js v="() => new Float64Array()" n=1000000                                               -4.46 %       ±9.57% ±22.08% ±70.30%
error/determine-specific-type.js v="() => new Int16Array()" n=1000000                                           *     -1.38 %       ±1.15%  ±2.66%  ±8.46%
error/determine-specific-type.js v="() => new Int32Array()" n=1000000                                                  0.79 %       ±1.47%  ±3.38% ±10.76%
error/determine-specific-type.js v="() => new Int8Array()" n=1000000                                           **     -2.19 %       ±0.64%  ±1.47%  ±4.69%
error/determine-specific-type.js v="() => new Map()" n=1000000                                                ***     11.50 %       ±0.23%  ±0.53%  ±1.69%
error/determine-specific-type.js v="() => new Object()" n=1000000                                                      0.38 %       ±1.80%  ±4.15% ±13.21%
error/determine-specific-type.js v="() => new Set()" n=1000000                                                         0.80 %       ±2.01%  ±4.64% ±14.78%
error/determine-specific-type.js v="() => new Uint16Array()" n=1000000                                                -2.79 %       ±4.41% ±10.17% ±32.37%
error/determine-specific-type.js v="() => new Uint32Array()" n=1000000                                                -2.10 %       ±3.12%  ±7.20% ±22.93%
error/determine-specific-type.js v="() => new Uint8Array()" n=1000000                                           *     -1.57 %       ±1.57%  ±3.61% ±11.51%
error/determine-specific-type.js v="() => new Uint8ClampedArray()" n=1000000                                          -2.79 %       ±3.36%  ±7.76% ±24.70%
error/determine-specific-type.js v="() => new WeakMap()" n=1000000                                             **     17.44 %       ±5.78% ±13.33% ±42.45%
error/determine-specific-type.js v="() => new WeakSet()" n=1000000                                                     1.74 %       ±2.31%  ±5.32% ±16.94%
error/determine-specific-type.js v="() => null" n=1000000                                                             -1.01 %       ±1.09%  ±2.51%  ±7.99%
error/determine-specific-type.js v="() => Promise.resolve(\\"foo\\")" n=1000000                                 *      1.49 %       ±1.13%  ±2.61%  ±8.30%
error/determine-specific-type.js v="() => Symbol(\\"foo\\")" n=1000000                                                -1.95 %       ±2.12%  ±4.89% ±15.58%
error/determine-specific-type.js v="() => true" n=1000000                                                      **    -12.11 %       ±4.21%  ±9.71% ±30.91%
error/determine-specific-type.js v="() => undefined" n=1000000                                                ***     13.02 %       ±0.79%  ±1.82%  ±5.81%
error/error-class-reg-exp.js n=100000                                                                                 -2.33 %       ±7.40% ±17.08% ±54.37%
error/error.js n=10000000                                                                                             -1.57 %       ±3.55%  ±8.19% ±26.07%
error/format-list.js type="and" input=' n=10000000                                                                    -0.20 %       ±0.31%  ±0.72%  ±2.28%
error/format-list.js type="and" input="a,b,c,d" n=10000000                                                             1.13 %       ±4.55% ±10.51% ±33.45%
error/format-list.js type="and" input="a,b,c" n=10000000                                                               1.51 %       ±2.90%  ±6.70% ±21.32%
error/format-list.js type="and" input="a,b" n=10000000                                                                -0.85 %       ±2.14%  ±4.94% ±15.73%
error/format-list.js type="and" input="a" n=10000000                                                           **      1.07 %       ±0.16%  ±0.37%  ±1.17%
error/format-list.js type="or" input=' n=10000000                                                                      0.12 %       ±0.32%  ±0.75%  ±2.39%
error/format-list.js type="or" input="a,b,c,d" n=10000000                                                             -0.18 %       ±7.99% ±18.42% ±58.66%
error/format-list.js type="or" input="a,b,c" n=10000000                                                               -1.34 %       ±4.39% ±10.14% ±32.27%
error/format-list.js type="or" input="a,b" n=10000000                                                                 -3.38 %       ±3.80%  ±8.77% ±27.91%
error/format-list.js type="or" input="a" n=10000000                                                                   -0.16 %       ±0.26%  ±0.60%  ±1.91%
error/format-list.js type="undefined" input=' n=10000000                                                              -0.06 %       ±0.44%  ±1.01%  ±3.20%
error/format-list.js type="undefined" input="a,b,c,d" n=10000000                                                      -0.60 %       ±2.58%  ±5.95% ±18.96%
error/format-list.js type="undefined" input="a,b,c" n=10000000                                                        -2.05 %       ±4.95% ±11.41% ±36.33%
error/format-list.js type="undefined" input="a,b" n=10000000                                                          -0.59 %       ±4.64% ±10.69% ±34.05%
error/format-list.js type="undefined" input="a" n=10000000                                                      *     -0.20 %       ±0.10%  ±0.23%  ±0.74%
error/hidestackframes.js n=100000 type="direct-call-noerr"                                                             4.23 %       ±6.21% ±14.33% ±45.63%
error/hidestackframes.js n=100000 type="direct-call-throw"                                                             0.53 %       ±2.06%  ±4.75% ±15.12%
error/hidestackframes.js n=100000 type="hide-stackframes-noerr"                                                        3.02 %       ±5.61% ±12.93% ±41.18%
error/hidestackframes.js n=100000 type="hide-stackframes-throw"                                                       -1.00 %       ±1.09%  ±2.52%  ±8.03%
error/node-error-instantiation.js stackTraceLimit=0 code="built-in" n=1000000                                          0.61 %       ±3.16%  ±7.28% ±23.18%
error/node-error-instantiation.js stackTraceLimit=0 code="ERR_HTTP2_STREAM_SELF_DEPENDENCY" n=1000000                  1.11 %       ±5.30% ±12.23% ±38.93%
error/node-error-instantiation.js stackTraceLimit=0 code="ERR_INVALID_STATE" n=1000000                                -3.20 %       ±4.80% ±11.07% ±35.23%
error/node-error-instantiation.js stackTraceLimit=0 code="ERR_INVALID_URL" n=1000000                                   0.07 %       ±5.69% ±13.14% ±41.82%
error/node-error-instantiation.js stackTraceLimit=10 code="built-in" n=1000000                                        -0.72 %       ±1.56%  ±3.60% ±11.47%
error/node-error-instantiation.js stackTraceLimit=10 code="ERR_HTTP2_STREAM_SELF_DEPENDENCY" n=1000000                -0.22 %       ±2.76%  ±6.37% ±20.29%
error/node-error-instantiation.js stackTraceLimit=10 code="ERR_INVALID_STATE" n=1000000                               -1.37 %       ±2.04%  ±4.71% ±14.99%
error/node-error-instantiation.js stackTraceLimit=10 code="ERR_INVALID_URL" n=1000000                                 -0.63 %       ±2.51%  ±5.80% ±18.47%
error/node-error-stack.js stackTraceLimit=0 code="built-in" n=1000000                                                 -0.96 %       ±7.10% ±16.37% ±52.12%
error/node-error-stack.js stackTraceLimit=0 code="ERR_HTTP2_STREAM_SELF_DEPENDENCY" n=1000000                   *      2.82 %       ±2.07%  ±4.77% ±15.18%
error/node-error-stack.js stackTraceLimit=0 code="ERR_INVALID_STATE" n=1000000                                  *      2.06 %       ±1.57%  ±3.62% ±11.53%
error/node-error-stack.js stackTraceLimit=10 code="built-in" n=1000000                                         **      1.72 %       ±0.54%  ±1.24%  ±3.96%
error/node-error-stack.js stackTraceLimit=10 code="ERR_HTTP2_STREAM_SELF_DEPENDENCY" n=1000000                        -0.01 %       ±1.21%  ±2.80%  ±8.90%
error/node-error-stack.js stackTraceLimit=10 code="ERR_INVALID_STATE" n=1000000                                 *      2.15 %       ±1.22%  ±2.81%  ±8.95%

Be aware that when doing many comparisons the risk of a false-positive
result increases. In this case, there are 69 comparisons, you can thus
expect the following amount of false-positive results:
  3.45 false positives, when considering a   5% risk acceptance (*, **, ***),
  0.69 false positives, when considering a   1% risk acceptance (**, ***),
  0.07 false positives, when considering a 0.1% risk acceptance (***)
